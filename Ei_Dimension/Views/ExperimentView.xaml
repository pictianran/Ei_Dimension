<UserControl xmlns:dxsps="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet"
             xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:ViewModels="clr-namespace:Ei_Dimension.ViewModels"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             x:Class="Ei_Dimension.Views.ExperimentView"
             xmlns:lang="clr-namespace:Ei_Dimension.Language;assembly=Language"
             mc:Ignorable="d"
             DataContext="{dxmvvm:ViewModelSource Type={x:Type ViewModels:ExperimentViewModel}}"
             d:DesignHeight="674" d:DesignWidth="1500">
  <Grid>
    <!--WellTable 96-->
    <DataGrid HorizontalAlignment="Left" VerticalAlignment="Top"
                SelectionMode="Extended"
                SelectionUnit="Cell"
                AutoGenerateColumns="False"
                ItemsSource="{Binding Table96Wells}"
                HeadersVisibility="All"
                Background="Transparent"
                RowBackground="Transparent"
                AlternatingRowBackground="Transparent"
                GridLinesVisibility="None"
                Visibility="{Binding Table96Visible}"
                CanUserResizeColumns="False"
                CanUserResizeRows="False"
                BorderThickness="0">
      <DataGrid.Resources>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}"
               TargetType="{x:Type Button}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Button}">
                <Grid Background="{StaticResource PressedButtonBackground}">
                  <ContentPresenter/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="IsEnabled" Value="False"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </DataGrid.Resources>
      <dxmvvm:Interaction.Behaviors>
          <dxmvvm:EventToCommand EventName="SelectedCellsChanged"
                                 Command="{Binding SelectIndicesCommand}"
                                 PassEventArgsToCommand="True"/>
        </dxmvvm:Interaction.Behaviors>
      <DataGrid.CellStyle>
          <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                  <Border x:Name="border">
                    <ContentPresenter />
                  </Border>
                  <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true">
                      <Setter TargetName="border" Property="Background" Value="{StaticResource PressedButtonBackground}"/>
                    </DataTrigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
      </DataGrid.CellStyle>
      <DataGrid.RowHeaderStyle>
        <Style TargetType="{x:Type DataGridRowHeader}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridRowHeader">
                <Grid Background="{StaticResource PressedButtonBackground}">
                  <ContentPresenter HorizontalAlignment="Center"/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="Content" Value="{Binding Header}"/>
          <Setter Property="Foreground" Value="{StaticResource AppTextColor}"/>
          <Setter Property="FontFamily" Value="{StaticResource AppTextFont}"/>
          <Setter Property="FontWeight" Value="ExtraBold"/>
          <Setter Property="FontSize" Value="25"/>
          <Setter Property="Height" Value="33"/>
          <Style.Triggers>
            <Trigger Property="IsVisible" Value="true">
              <Setter Property="Height" Value="32"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </DataGrid.RowHeaderStyle>
      <DataGrid.ColumnHeaderStyle>
        <Style TargetType="{x:Type DataGridColumnHeader}">
          <Setter Property="Foreground" Value="{StaticResource AppTextColor}"/>
          <Setter Property="FontFamily" Value="{StaticResource AppTextFont}"/>
          <Setter Property="FontWeight" Value="ExtraBold"/>
          <Setter Property="FontSize" Value="25"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridColumnHeader">
                <Grid Background="{StaticResource PressedButtonBackground}">
                  <ContentPresenter HorizontalAlignment="Center"/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </DataGrid.ColumnHeaderStyle>
      <DataGrid.Columns>
        <DataGridTemplateColumn Header="1" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[0]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Header="2" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[1]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Header="3" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[2]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Header="4" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[3]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Header="5" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[4]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Header="6" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[5]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Header="7" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[6]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Header="8" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[7]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Header="9" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[8]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Header="10" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[9]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Header="11" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[10]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
          <DataGridTemplateColumn Header="12" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[11]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        </DataGrid.Columns>
      </DataGrid>

    <!--WellTable 384-->
    <DataGrid HorizontalAlignment="Left" VerticalAlignment="Top"
              SelectionMode="Extended"
              SelectionUnit="Cell"
              AutoGenerateColumns="False"
              ItemsSource="{Binding Table384Wells}"
              HeadersVisibility="All"
              Background="Transparent"
              RowBackground="Transparent"
              AlternatingRowBackground="Transparent"
              GridLinesVisibility="None"
              Visibility="{Binding Table384Visible}"
              CanUserResizeColumns="False"
              CanUserResizeRows="False"
              BorderThickness="0">
      <DataGrid.Resources>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}"
               TargetType="{x:Type Button}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Button}">
                <Grid Background="{StaticResource PressedButtonBackground}">
                  <ContentPresenter/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="IsEnabled" Value="False"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </DataGrid.Resources>
      <dxmvvm:Interaction.Behaviors>
        <dxmvvm:EventToCommand EventName="SelectedCellsChanged"
                               Command="{Binding SelectIndicesCommand}"
                               PassEventArgsToCommand="True"/>
      </dxmvvm:Interaction.Behaviors>
      
      <DataGrid.CellStyle>
        <Style TargetType="{x:Type DataGridCell}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridCell">
                <Border x:Name="border">
                  <ContentPresenter />
                </Border>
                <ControlTemplate.Triggers>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true">
                    <Setter TargetName="border" Property="Background" Value="{StaticResource PressedButtonBackground}"/>
                  </DataTrigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
        </DataGrid.CellStyle>
      <DataGrid.RowHeaderStyle>
        <Style TargetType="{x:Type DataGridRowHeader}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridRowHeader">
                <Grid Background="{StaticResource PressedButtonBackground}">
                  <ContentPresenter HorizontalAlignment="Center"/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="Content" Value="{Binding Header}"/>
          <Setter Property="Foreground" Value="{StaticResource AppTextColor}"/>
          <Setter Property="FontFamily" Value="{StaticResource AppTextFont}"/>
          <Setter Property="FontWeight" Value="ExtraBold"/>
          <Setter Property="FontSize" Value="25"/>
          <Setter Property="Height" Value="33"/>
          <Style.Triggers>
            <Trigger Property="IsVisible" Value="true">
              <Setter Property="Height" Value="32"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </DataGrid.RowHeaderStyle>
      <DataGrid.ColumnHeaderStyle>
        <Style TargetType="{x:Type DataGridColumnHeader}">
          <Setter Property="Foreground" Value="{StaticResource AppTextColor}"/>
          <Setter Property="FontFamily" Value="{StaticResource AppTextFont}"/>
          <Setter Property="FontSize" Value="25"/>
          <Setter Property="FontWeight" Value="ExtraBold"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridColumnHeader">
                <Grid Background="{StaticResource PressedButtonBackground}">
                  <ContentPresenter HorizontalAlignment="Center"/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </DataGrid.ColumnHeaderStyle>
      <DataGrid.Columns>
        <DataGridTemplateColumn Header="1" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[0]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="2" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[1]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="3" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[2]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="4" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[3]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="5" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[4]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="6" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[5]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="7" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[6]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="8" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[7]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="9" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[8]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="10" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[9]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="11" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[10]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="12" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[11]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="13" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[12]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="14" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[13]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="15" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[14]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="16" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[15]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="17" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[16]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="18" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[17]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="19" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[18]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="20" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[19]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="21" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[20]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="22" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[21]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="23" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[22]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="24" Width="SizeToCells"
                                IsReadOnly="True">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <Image Source="{Binding Images[23]}"/>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
      </DataGrid.Columns>
    </DataGrid>
    
    <!--WellTable Size Selector-->
    <Border HorizontalAlignment="Left" VerticalAlignment="Bottom"
            BorderThickness="2"
              BorderBrush="{StaticResource AppTextColor}"
              Margin="20,0,0,20"
              Width="240"
              Height="60"
              CornerRadius="5">
      <StackPanel HorizontalAlignment="Center"
                  Orientation="Horizontal">
        <RadioButton Content="96"
                     Style="{StaticResource RadioButtonHorizontalThemeStyle}"
                     IsChecked="{Binding Selected96}"
                     Width="120"
                     Command="{Binding ChangeWellTableSizeCommand}">
          <RadioButton.CommandParameter>
            <System:Int32>96</System:Int32>
          </RadioButton.CommandParameter>
        </RadioButton>
        <RadioButton Content="384"
                     Style="{StaticResource RadioButtonHorizontalThemeStyle}"
                     IsChecked="{Binding Selected384}"
                     Width="120"
                     Command="{Binding ChangeWellTableSizeCommand}">
          <RadioButton.CommandParameter>
            <System:Int32>384</System:Int32>
          </RadioButton.CommandParameter>
        </RadioButton>
      </StackPanel>
    </Border>

    <!--Well Assignment Buttons-->
    <Border HorizontalAlignment="Left" VerticalAlignment="Bottom"
            Margin="300,0,0,20">
      <StackPanel Orientation="Horizontal">
        <Button Width="50" Height="50"
                Command="{Binding AssignWellTypeButtonClickCommand}"
                CommandParameter="0">
          <Image Source="pack://application:,,,/DevExpress.Images.v21.1;component/Images/Actions/Cancel_32x32.png"/>
        </Button>
        <Button Width="50" Height="50"
                Command="{Binding AssignWellTypeButtonClickCommand}"
                CommandParameter="1">
          <Image Source="pack://application:,,,/DevExpress.Images.v21.1;component/Images/Actions/Apply_32x32.png"/>
        </Button>
        <Button Width="50" Height="50"
                Command="{Binding AssignWellTypeButtonClickCommand}"
                CommandParameter="2">
          <Image Source="pack://application:,,,/DevExpress.Images.v21.1;component/Images/Media/Media_32x32.png"/>
        </Button>
        <Button Width="50" Height="50"
                Command="{Binding AssignWellTypeButtonClickCommand}"
                CommandParameter="3">
          <Image Source="pack://application:,,,/DevExpress.Images.v21.1;component/Images/Find/Find_32x32.png"/>
        </Button>
      </StackPanel> 
    </Border>

    <!--System Control-->
    <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="800,50,0,0">

      <StackPanel VerticalAlignment="Stretch">
        <TextBlock Text="{lang:Loc Experiment_System_Control}"
                 FontFamily="{StaticResource AppTextFont}"
                 FontSize="30"
                 FontWeight="UltraBold"
                 Foreground="{StaticResource AppTextColor}"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Top"
                 Margin="0,0,0,0"/>

        <Border BorderThickness="2"
                BorderBrush="{StaticResource AppTextColor}"
                Margin="0,0,0,5"
                Width="150"
                CornerRadius="5">

          <StackPanel HorizontalAlignment="Center">
            <RadioButton Content="{lang:Loc Experiment_Manual}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="150"
                         FontSize="19"
                         IsChecked="{Binding SystemControlSelectorState[0]}"
                         Command="{Binding SystemControlSelectorCommand}">
              <RadioButton.CommandParameter>
                <System:Byte>0</System:Byte>
              </RadioButton.CommandParameter>
            </RadioButton>
            <RadioButton Content="{lang:Loc Experiment_Work_Order}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="150"
                         FontSize="19"
                         IsChecked="{Binding SystemControlSelectorState[1]}"
                         Command="{Binding SystemControlSelectorCommand}">
              <RadioButton.CommandParameter>
                <System:Byte>1</System:Byte>
              </RadioButton.CommandParameter>
            </RadioButton>
            <RadioButton Content="{lang:Loc Experiment_Work_Order_Plus_Bcode}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="150"
                         FontSize="19"
                         IsChecked="{Binding SystemControlSelectorState[2]}"
                         Command="{Binding SystemControlSelectorCommand}">
              <RadioButton.CommandParameter>
                <System:Byte>2</System:Byte>
              </RadioButton.CommandParameter>
            </RadioButton>
          </StackPanel>
        </Border>
      </StackPanel>
    </Border>

    <!--Order-->
    <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="1050,50,0,0">

      <StackPanel VerticalAlignment="Stretch">
        <TextBlock Text="{lang:Loc Experiment_Order}"
                 FontFamily="{StaticResource AppTextFont}"
                 FontSize="30"
                 FontWeight="UltraBold"
                 Foreground="{StaticResource AppTextColor}"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Top"
                 Margin="0,0,0,0"/>

        <Border BorderThickness="2"
                BorderBrush="{StaticResource AppTextColor}"
                Margin="0,0,0,5"
                Width="150"
                CornerRadius="5">

          <StackPanel HorizontalAlignment="Center">
            <RadioButton Content="{lang:Loc Row}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="150"
                         IsChecked="True"
                         Command="{Binding OrderSelectorCommand}">
              <RadioButton.CommandParameter>
                <System:String>Row</System:String>
              </RadioButton.CommandParameter>
            </RadioButton>
            <RadioButton Content="{lang:Loc Column}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="150"
                         Command="{Binding OrderSelectorCommand}">
              <RadioButton.CommandParameter>
                <System:String>Column</System:String>
              </RadioButton.CommandParameter>
            </RadioButton>
          </StackPanel>
        </Border>
      </StackPanel>
    </Border>

    <!--End Read-->
    <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="1250,50,0,0">

      <StackPanel VerticalAlignment="Stretch">
        <TextBlock Text="{lang:Loc Experiment_End_Read}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="30"
                   FontWeight="UltraBold"
                   Foreground="{StaticResource AppTextColor}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,0,0,0"/>
        <StackPanel Orientation="Horizontal">
          <Border BorderThickness="2"
                BorderBrush="{StaticResource AppTextColor}"
                HorizontalAlignment="Left"
                Margin="0,0,0,5"
                Width="100"
                CornerRadius="5">

          <StackPanel HorizontalAlignment="Center">
            <RadioButton Content="{lang:Loc Experiment_Min_Per_Reg}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="100"
                         FontSize="19"
                         IsChecked="{Binding EndReadSelectorState[0]}"
                         Command="{Binding EndReadSelectorCommand}">
              <RadioButton.CommandParameter>
                <System:Byte>0</System:Byte>
              </RadioButton.CommandParameter>
            </RadioButton>
            <RadioButton Content="{lang:Loc Experiment_Total_Events}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="100"
                         FontSize="19"
                         IsChecked="{Binding EndReadSelectorState[1]}"
                         Command="{Binding EndReadSelectorCommand}">
              <RadioButton.CommandParameter>
                <System:Byte>1</System:Byte>
              </RadioButton.CommandParameter>
            </RadioButton>
            <RadioButton Content="{lang:Loc Experiment_End_of_Sample}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="100"
                         FontSize="19"
                         IsChecked="{Binding EndReadSelectorState[2]}"
                         Command="{Binding EndReadSelectorCommand}">
              <RadioButton.CommandParameter>
                <System:Byte>2</System:Byte>
              </RadioButton.CommandParameter>
            </RadioButton>
          </StackPanel>
        </Border>
          <StackPanel Margin="3,6,0,0">
            <TextBox Height="36"
                     HorizontalAlignment="Stretch"
                     Margin="0,0,0,0"
                     Width="80"
                     Style="{StaticResource InputFieldStyle}"
                     Text="{Binding EndRead[0]}">
              <dxmvvm:Interaction.Behaviors>
                <dxmvvm:EventToCommand EventName="GotFocus" Command="{Binding FocusedBoxCommand}" CommandParameter="0"/>
              </dxmvvm:Interaction.Behaviors>
            </TextBox>
            <TextBox Height="36"
                     HorizontalAlignment="Stretch"
                     Margin="0,6,0,0"
                     Width="80"
                     Style="{StaticResource InputFieldStyle}"
                     Text="{Binding EndRead[1]}">
              <dxmvvm:Interaction.Behaviors>
                <dxmvvm:EventToCommand EventName="GotFocus" Command="{Binding FocusedBoxCommand}" CommandParameter="1"/>
              </dxmvvm:Interaction.Behaviors>
            </TextBox>
          </StackPanel>
        </StackPanel>
      </StackPanel>
    </Border>

    <!--Volumes-->
    <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="840,300,0,0">
      <StackPanel>
        <TextBlock Text="{lang:Loc Experiment_Samp_Vol}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="26"
                   FontWeight="UltraBold"
                   Foreground="{StaticResource AppTextColor}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,0,0,3"/>
        <TextBox Height="36"
                 Width="100"
                 HorizontalAlignment="Center"
                 Margin="0,0,10,3"
                 Style="{StaticResource InputFieldStyle}"
                 Text="{Binding Volumes[0]}">
          <dxmvvm:Interaction.Behaviors>
            <dxmvvm:EventToCommand EventName="GotFocus" Command="{Binding FocusedBoxCommand}" CommandParameter="2"/>
          </dxmvvm:Interaction.Behaviors>
        </TextBox>
        <TextBlock Text="{lang:Loc Experiment_Wash_Vol}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="26"
                   FontWeight="UltraBold"
                   Foreground="{StaticResource AppTextColor}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,0,0,3"/>
        <TextBox Height="36"
                 Width="100"
                 HorizontalAlignment="Center"
                 Margin="0,0,10,3"
                 Style="{StaticResource InputFieldStyle}"
                 Text="{Binding Volumes[1]}">
          <dxmvvm:Interaction.Behaviors>
            <dxmvvm:EventToCommand EventName="GotFocus" Command="{Binding FocusedBoxCommand}" CommandParameter="3"/>
          </dxmvvm:Interaction.Behaviors>
        </TextBox>
        <TextBlock Text="{lang:Loc Experiment_Agitate_Vol}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="26"
                   FontWeight="UltraBold"
                   Foreground="{StaticResource AppTextColor}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,0,0,3"/>
        <TextBox Height="36"
                 Width="100"
                 HorizontalAlignment="Center"
                 Margin="0,0,10,3"
                 Style="{StaticResource InputFieldStyle}"
                 Text="{Binding Volumes[2]}">
          <dxmvvm:Interaction.Behaviors>
            <dxmvvm:EventToCommand EventName="GotFocus" Command="{Binding FocusedBoxCommand}" CommandParameter="4"/>
          </dxmvvm:Interaction.Behaviors>
        </TextBox>
      </StackPanel>
    </Border>

    <!--Dropdowns-->
    <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="1040,300,0,0">
      <StackPanel>
        <TextBlock Text="{lang:Loc Experiment_Speed}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="26"
                   FontWeight="UltraBold"
                   Foreground="{StaticResource AppTextColor}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,0,0,3"/>
        <dx:DropDownButton Width="300"
                           Height="50"
                           FontSize="25"
                           VerticalAlignment="Bottom"
                           HorizontalAlignment="Left"
                           FontFamily="{StaticResource AppTextFont}"
                           Foreground="{StaticResource AppTextColor}"
                           Content="{Binding SelectedSpeedContent}">
          <dxb:PopupMenu ItemLinksSource="{Binding SpeedItems}">
            <dxb:PopupMenu.ItemTemplate>
              <DataTemplate>
                <ContentControl>
                  <dxb:BarButtonItem Content="{Binding Content}"  
                                   ItemClick="{DXEvent 'Click((int)1)'}"/>
                </ContentControl>
              </DataTemplate>
            </dxb:PopupMenu.ItemTemplate>
          </dxb:PopupMenu>
        </dx:DropDownButton>
        <TextBlock Text="{lang:Loc Experiment_Classific_Map}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="26"
                   FontWeight="UltraBold"
                   Foreground="{StaticResource AppTextColor}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,0,0,3"/>
        <dx:DropDownButton Width="300"
                           Height="50"
                           FontSize="25"
                           VerticalAlignment="Bottom"
                           HorizontalAlignment="Left"
                           FontFamily="{StaticResource AppTextFont}"
                           Foreground="{StaticResource AppTextColor}"
                           Content="{Binding SelectedClassiMapContent}">
          <dxb:PopupMenu ItemLinksSource="{Binding ClassiMapItems}">
            <dxb:PopupMenu.ItemTemplate>
              <DataTemplate>
                <ContentControl>
                  <dxb:BarButtonItem Content="{Binding Content}"  
                                   ItemClick="{DXEvent 'Click((int)2)'}"/>
                </ContentControl>
              </DataTemplate>
            </dxb:PopupMenu.ItemTemplate>
          </dxb:PopupMenu>
        </dx:DropDownButton>
        <TextBlock Text="{lang:Loc Experiment_Ch_Config}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="26"
                   FontWeight="UltraBold"
                   Foreground="{StaticResource AppTextColor}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,0,0,3"/>
        <dx:DropDownButton Width="300"
                           Height="50"
                           FontSize="25"
                           VerticalAlignment="Bottom"
                           HorizontalAlignment="Left"
                           FontFamily="{StaticResource AppTextFont}"
                           Foreground="{StaticResource AppTextColor}"
                           Content="{Binding SelectedChConfigContent}">
          <dxb:PopupMenu ItemLinksSource="{Binding ChConfigItems}">
            <dxb:PopupMenu.ItemTemplate>
              <DataTemplate>
                <ContentControl>
                  <dxb:BarButtonItem Content="{Binding Content}"  
                                   ItemClick="{DXEvent 'Click((int)3)'}"/>
                </ContentControl>
              </DataTemplate>
            </dxb:PopupMenu.ItemTemplate>
          </dxb:PopupMenu>
        </dx:DropDownButton>
      </StackPanel>
    </Border>
  </Grid>
</UserControl>
