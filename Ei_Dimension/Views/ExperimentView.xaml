<UserControl xmlns:dxsps="http://schemas.devexpress.com/winfx/2008/xaml/spreadsheet"
             xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             xmlns:ViewModels="clr-namespace:Ei_Dimension.ViewModels"
             xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"
             xmlns:dxwuin="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/navigation"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             x:Class="Ei_Dimension.Views.ExperimentView"
             xmlns:lang="clr-namespace:Ei_Dimension.Language;assembly=Language"
             xmlns:img="clr-namespace:Ei_Dimension.Styles"
             mc:Ignorable="d"
             DataContext="{dxmvvm:ViewModelSource Type={x:Type ViewModels:ExperimentViewModel}}"
             d:DesignHeight="674" d:DesignWidth="1500">
  <dxmvvm:Interaction.Triggers>
    <dxmvvm:EventToCommand EventName="Initialized" Command="{Binding NavigateDashboardCommand}"/>
  </dxmvvm:Interaction.Triggers>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="2*"/>
      <ColumnDefinition Width="11*"/>
    </Grid.ColumnDefinitions>

    <dxwui:NavigationFrame AnimationType="SlideHorizontal"
                           NavigationCacheMode="Required"
                           Grid.Column="1">
      <dxmvvm:Interaction.Triggers>
        <dxmvvm:EventToCommand EventName="Loaded" Command="{Binding NavigateMotorsCommand}" />
      </dxmvvm:Interaction.Triggers>
      <dxmvvm:Interaction.Behaviors>
        <dxwuin:FrameNavigationService />
      </dxmvvm:Interaction.Behaviors>
    </dxwui:NavigationFrame>
    <!--WellTable 96-->
    <DataGrid Name="grd96" Grid.ColumnSpan="2"
              HorizontalAlignment="Center" VerticalAlignment="Center"
              SelectionMode="Extended"
              SelectionUnit="Cell"
              AutoGenerateColumns="False"
              ItemsSource="{Binding Table96Wells}"
              HeadersVisibility="All"
              Background="Transparent"
              RowBackground="Transparent"
              AlternatingRowBackground="Transparent"
              GridLinesVisibility="None"
              Visibility="{Binding Table96Visible}"
              CanUserResizeColumns="False"
              CanUserResizeRows="False"
              CanUserReorderColumns="False"
              CanUserDeleteRows="False"
              CanUserSortColumns="False"
              BorderThickness="0"
              TouchMove="grd96_TouchMove"
              TouchDown="grd96_TouchDown">
      <DataGrid.Resources>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}"
               TargetType="{x:Type Button}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Button}">
                <Grid Background="{StaticResource AppBackground}">
                  <ContentPresenter/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="IsEnabled" Value="False"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </DataGrid.Resources>
      <dxmvvm:Interaction.Behaviors>
        <dxmvvm:EventToCommand EventName="SelectedCellsChanged"
                                 Command="{Binding SelectIndicesCommand}"
                                 PassEventArgsToCommand="True"/>
      </dxmvvm:Interaction.Behaviors>
      <DataGrid.CellStyle>
        <Style TargetType="{x:Type DataGridCell}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridCell">
                <Border x:Name="border">
                  <ContentPresenter />
                </Border>
                <ControlTemplate.Triggers>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}"
                               Value="true">
                    <Setter TargetName="border" Property="Background"
                            Value="{StaticResource RibbonBackgroundActive}"/>
                  </DataTrigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </DataGrid.CellStyle>
      <DataGrid.RowHeaderStyle>
        <Style TargetType="{x:Type DataGridRowHeader}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridRowHeader">
                <Grid Background="{StaticResource AppBackground}">
                  <ContentPresenter HorizontalAlignment="Center"/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="Content" Value="{Binding Header}"/>
          <Setter Property="Foreground" Value="{StaticResource AppTextColor}"/>
          <Setter Property="FontFamily" Value="{StaticResource AppTextFont}"/>
          <Setter Property="FontWeight" Value="ExtraBold"/>
          <Setter Property="FontSize" Value="25"/>
          <Setter Property="Height" Value="33"/>
          <Style.Triggers>
            <Trigger Property="IsVisible" Value="true">
              <Setter Property="Height" Value="32"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </DataGrid.RowHeaderStyle>
      <DataGrid.ColumnHeaderStyle>
        <Style TargetType="{x:Type DataGridColumnHeader}">
          <Setter Property="Foreground" Value="{StaticResource AppTextColor}"/>
          <Setter Property="FontFamily" Value="{StaticResource AppTextFont}"/>
          <Setter Property="FontWeight" Value="ExtraBold"/>
          <Setter Property="FontSize" Value="25"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridColumnHeader">
                <Grid Background="{StaticResource AppBackground}">
                  <ContentPresenter HorizontalAlignment="Center"/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </DataGrid.ColumnHeaderStyle>
      <DataGrid.Columns>
        <DataGridTemplateColumn Header="1" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[0]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="2" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[1]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="3" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[2]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="4" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[3]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="5" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[4]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="6" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[5]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="7" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[6]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="8" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[7]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="9" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[8]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="10" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[9]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="11" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[10]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="12" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[11]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
      </DataGrid.Columns>
    </DataGrid>

    <!--WellTable 384-->
    <DataGrid Name="grd384" Grid.ColumnSpan="2"
              HorizontalAlignment="Center" VerticalAlignment="Top"
              Margin="0,30,0,0"
              SelectionMode="Extended"
              SelectionUnit="Cell"
              AutoGenerateColumns="False"
              ItemsSource="{Binding Table384Wells}"
              HeadersVisibility="All"
              Background="Transparent"
              RowBackground="Transparent"
              AlternatingRowBackground="Transparent"
              GridLinesVisibility="None"
              Visibility="{Binding Table384Visible}"
              CanUserResizeColumns="False"
              CanUserResizeRows="False"
              CanUserReorderColumns="False"
              CanUserDeleteRows="False"
              CanUserSortColumns="False"
              BorderThickness="0"
              TouchMove="grd384_TouchMove"
              TouchDown="grd384_TouchDown">
      <DataGrid.Resources>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}"
               TargetType="{x:Type Button}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Button}">
                <Grid Background="{StaticResource AppBackground}">
                  <ContentPresenter/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Style.Triggers>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="IsEnabled" Value="False"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </DataGrid.Resources>
      <dxmvvm:Interaction.Behaviors>
        <dxmvvm:EventToCommand EventName="SelectedCellsChanged"
                               Command="{Binding SelectIndicesCommand}"
                               PassEventArgsToCommand="True"/>
      </dxmvvm:Interaction.Behaviors>

      <DataGrid.CellStyle>
        <Style TargetType="{x:Type DataGridCell}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridCell">
                <Border x:Name="border">
                  <ContentPresenter />
                </Border>
                <ControlTemplate.Triggers>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="true">
                    <Setter TargetName="border" Property="Background"
                            Value="{StaticResource RibbonBackgroundActive}"/>
                  </DataTrigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </DataGrid.CellStyle>
      <DataGrid.RowHeaderStyle>
        <Style TargetType="{x:Type DataGridRowHeader}">
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridRowHeader">
                <Grid Background="{StaticResource AppBackground}">
                  <ContentPresenter HorizontalAlignment="Center"/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
          <Setter Property="Content" Value="{Binding Header}"/>
          <Setter Property="Foreground" Value="{StaticResource AppTextColor}"/>
          <Setter Property="FontFamily" Value="{StaticResource AppTextFont}"/>
          <Setter Property="FontWeight" Value="ExtraBold"/>
          <Setter Property="FontSize" Value="25"/>
          <Setter Property="Height" Value="33"/>
          <Style.Triggers>
            <Trigger Property="IsVisible" Value="true">
              <Setter Property="Height" Value="32"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </DataGrid.RowHeaderStyle>
      <DataGrid.ColumnHeaderStyle>
        <Style TargetType="{x:Type DataGridColumnHeader}">
          <Setter Property="Foreground" Value="{StaticResource AppTextColor}"/>
          <Setter Property="FontFamily" Value="{StaticResource AppTextFont}"/>
          <Setter Property="FontSize" Value="25"/>
          <Setter Property="FontWeight" Value="ExtraBold"/>
          <Setter Property="Template">
            <Setter.Value>
              <ControlTemplate TargetType="DataGridColumnHeader">
                <Grid Background="{StaticResource AppBackground}">
                  <ContentPresenter HorizontalAlignment="Center"/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </DataGrid.ColumnHeaderStyle>
      <DataGrid.Columns>
        <DataGridTemplateColumn Header="1" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[0]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="2" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[1]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="3" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[2]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="4" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[3]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="5" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[4]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="6" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[5]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="7" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[6]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="8" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[7]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="9" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[8]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="10" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[9]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="11" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[10]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="12" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[11]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="13" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[12]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="14" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[13]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="15" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[14]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="16" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[15]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="17" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[16]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="18" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[17]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="19" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[18]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="20" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[19]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="21" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[20]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="22" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[21]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="23" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[22]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn Header="24" Width="SizeToCells"
                                IsReadOnly="True">
          <DataGridTemplateColumn.CellTemplate>
            <DataTemplate>
              <Image Source="{Binding Images[23]}"/>
            </DataTemplate>
          </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
      </DataGrid.Columns>
    </DataGrid>

    <!--WellTable Size Selector-->
    <Border HorizontalAlignment="Left" VerticalAlignment="Top"
            Margin="20,600,0,0" Grid.ColumnSpan="2"
            Width="240"
            Height="60"
            Visibility="{Binding TableSelectorVisible}">
      <StackPanel HorizontalAlignment="Center"
                  Orientation="Horizontal">
        <ToggleButton Content="96"
                     Style="{StaticResource ToggleButtonThemeStyle}"
                     IsChecked="{Binding Selected96, Mode=OneWay}"
                     Width="120"
                     Command="{Binding ChangeWellTableSizeCommand}">
          <ToggleButton.CommandParameter>
            <System:Int32>96</System:Int32>
          </ToggleButton.CommandParameter>
        </ToggleButton>
        <ToggleButton Content="384"
                     Style="{StaticResource ToggleButtonThemeStyle}"
                     IsChecked="{Binding Selected384, Mode=OneWay}"
                     Width="120"
                     Command="{Binding ChangeWellTableSizeCommand}">
          <ToggleButton.CommandParameter>
            <System:Int32>384</System:Int32>
          </ToggleButton.CommandParameter>
        </ToggleButton>
      </StackPanel>
    </Border>

    <!--Well Assignment Buttons-->
    <Border HorizontalAlignment="Center" VerticalAlignment="Top"
            Margin="0,610,0,0" Grid.ColumnSpan="2"
            Visibility="{Binding WellSelectorVisible}">
      <StackPanel Orientation="Horizontal">
        <Button Width="50" Height="50"
                Command="{Binding AssignWellTypeButtonClickCommand}"
                CommandParameter="0">
          <Image Source="pack://application:,,,/DevExpress.Images.v21.1;component/Images/Actions/Cancel_32x32.png"/>
        </Button>
        <Button Width="50" Height="50"
                Command="{Binding AssignWellTypeButtonClickCommand}"
                CommandParameter="1">
          <Image Source="pack://application:,,,/DevExpress.Images.v21.1;component/Images/Actions/Apply_32x32.png"/>
        </Button>
        <Button Width="50" Height="50"
                Command="{Binding AssignWellTypeButtonClickCommand}"
                CommandParameter="2">
          <Image Source="pack://application:,,,/DevExpress.Images.v21.1;component/Images/Media/Media_32x32.png"/>
        </Button>
        <Button Width="50" Height="50"
                Command="{Binding AssignWellTypeButtonClickCommand}"
                CommandParameter="3">
          <Image Source="pack://application:,,,/DevExpress.Images.v21.1;component/Images/Find/Find_32x32.png"/>
        </Button>
      </StackPanel>
    </Border>

    <!--All Buttons are here-->
    <Grid Visibility="{Binding ButtonsVisible}"
          Margin="10,0,0,0" Grid.Column="1">
      <!--System Control-->
      <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="30,50,0,0">

        <StackPanel VerticalAlignment="Stretch">
          <TextBlock Text="{lang:Loc Experiment_System_Control}"
                 FontFamily="{StaticResource AppTextFont}"
                 FontSize="30"
                 FontWeight="UltraBold"
                 Foreground="{StaticResource AppTextColor}"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Top"
                 Margin="0,0,0,0"/>

          <Border BorderThickness="1"
                BorderBrush="{StaticResource HaltButtonBackgroundHighlighted}"
                Margin="0,0,0,5"
                Width="150">

            <StackPanel HorizontalAlignment="Center">
              <RadioButton Content="{lang:Loc Experiment_Manual}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="150"
                         FontSize="19"
                         IsChecked="{Binding SystemControlSelectorState[0]}"
                         Command="{Binding SystemControlSelectorCommand}">
                <RadioButton.CommandParameter>
                  <System:Byte>0</System:Byte>
                </RadioButton.CommandParameter>
              </RadioButton>
              <RadioButton Content="{lang:Loc Experiment_Work_Order}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="150"
                         FontSize="19"
                         IsChecked="{Binding SystemControlSelectorState[1]}"
                         Command="{Binding SystemControlSelectorCommand}">
                <RadioButton.CommandParameter>
                  <System:Byte>1</System:Byte>
                </RadioButton.CommandParameter>
              </RadioButton>
              <RadioButton Content="{lang:Loc Experiment_Work_Order_Plus_Bcode}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="150"
                         FontSize="19"
                         IsChecked="{Binding SystemControlSelectorState[2]}"
                         Command="{Binding SystemControlSelectorCommand}">
                <RadioButton.CommandParameter>
                  <System:Byte>2</System:Byte>
                </RadioButton.CommandParameter>
              </RadioButton>
            </StackPanel>
          </Border>
          <Button Content="{lang:Loc Experiment_Validate_Bcode}"
                  Command="{Binding ValidateBCodeButtonClickCommand}"
                  Style="{StaticResource ButtonStyle}"
                  Height="60" Width="180"
                  IsEnabled="{Binding ValidateBCodeButtonEnabled}"
                  Visibility="{Binding ValidateBCodeButtonVisible}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="0,4,0,0"/>
        </StackPanel>
      </Border>

      <!--Order-->
      <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="300,50,0,0">

        <StackPanel VerticalAlignment="Stretch">
          <TextBlock Text="{lang:Loc Experiment_Order}"
                 FontFamily="{StaticResource AppTextFont}"
                 FontSize="30"
                 FontWeight="UltraBold"
                 Foreground="{StaticResource AppTextColor}"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Top"
                 Margin="0,0,0,0"/>

          <Border BorderThickness="1"
                BorderBrush="{StaticResource HaltButtonBackgroundHighlighted}"
                Margin="0,0,0,5"
                Width="150">

            <StackPanel HorizontalAlignment="Center">
              <RadioButton Content="{lang:Loc Row}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="150"
                         IsChecked="{Binding OrderSelectorStateBool[1], Mode=OneWay}"
                         Command="{Binding OrderSelectorCommand}">
                <RadioButton.CommandParameter>
                  <System:Byte>1</System:Byte>
                </RadioButton.CommandParameter>
              </RadioButton>
              <RadioButton Content="{lang:Loc Column}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="150"
                         IsChecked="{Binding OrderSelectorStateBool[0], Mode=OneWay}"
                         Command="{Binding OrderSelectorCommand}">
                <RadioButton.CommandParameter>
                  <System:Byte>0</System:Byte>
                </RadioButton.CommandParameter>
              </RadioButton>
            </StackPanel>
          </Border>
        </StackPanel>
      </Border>

      <!--End Read-->
      <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="500,50,0,0">

        <StackPanel VerticalAlignment="Stretch">
          <TextBlock Text="{lang:Loc Experiment_End_Read}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="30"
                   FontWeight="UltraBold"
                   Foreground="{StaticResource AppTextColor}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,0,0,0"/>
          <StackPanel Orientation="Horizontal">
            <Border BorderThickness="1"
                  BorderBrush="{StaticResource HaltButtonBackgroundHighlighted}"
                  HorizontalAlignment="Left"
                  Margin="0,0,0,5"
                  Width="100">

              <StackPanel HorizontalAlignment="Center">
                <RadioButton Content="{lang:Loc Experiment_Min_Per_Reg}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="100"
                         FontSize="19"
                         IsChecked="{Binding EndReadSelectorState[0]}"
                         Command="{Binding EndReadSelectorCommand}">
                  <RadioButton.CommandParameter>
                    <System:Byte>0</System:Byte>
                  </RadioButton.CommandParameter>
                </RadioButton>
                <RadioButton Content="{lang:Loc Experiment_Total_Events}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="100"
                         FontSize="19"
                         IsChecked="{Binding EndReadSelectorState[1]}"
                         Command="{Binding EndReadSelectorCommand}">
                  <RadioButton.CommandParameter>
                    <System:Byte>1</System:Byte>
                  </RadioButton.CommandParameter>
                </RadioButton>
                <RadioButton Content="{lang:Loc Experiment_End_of_Sample}"
                         Style="{StaticResource RadioButtonVerticalThemeStyle}"
                         Height="44"
                         Width="100"
                         FontSize="19"
                         IsChecked="{Binding EndReadSelectorState[2]}"
                         Command="{Binding EndReadSelectorCommand}">
                  <RadioButton.CommandParameter>
                    <System:Byte>2</System:Byte>
                  </RadioButton.CommandParameter>
                </RadioButton>
              </StackPanel>
            </Border>
            <Border Background="{StaticResource RibbonBackgroundActive}"
                  Height="96" Width="100"
                  VerticalAlignment="Top"
                  Margin="5,0,0,0">
              <StackPanel>
                <TextBox HorizontalAlignment="Stretch"
                       Margin="8,8,8,0"
                       Style="{StaticResource InputFieldStyle}"
                       Text="{Binding EndRead[0]}">
                  <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand EventName="GotFocus" Command="{Binding FocusedBoxCommand}" CommandParameter="0"/>
                  </dxmvvm:Interaction.Behaviors>
                </TextBox>
                <TextBox HorizontalAlignment="Stretch"
                       Margin="8,8,8,8"
                       Style="{StaticResource InputFieldStyle}"
                       Text="{Binding EndRead[1]}">
                  <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand EventName="GotFocus" Command="{Binding FocusedBoxCommand}" CommandParameter="1"/>
                  </dxmvvm:Interaction.Behaviors>
                </TextBox>
              </StackPanel>
            </Border>
          </StackPanel>
        </StackPanel>
      </Border>

      <!--Volumes-->
      <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="30,350,0,0">
        <StackPanel Orientation="Horizontal">
          <StackPanel Margin="0,63,-15,0">
            <TextBlock Text="{lang:Loc Experiment_Samp_Vol}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="30"
                   FontWeight="UltraBold"
                   HorizontalAlignment="Right"
                   Foreground="{StaticResource AppTextColor}"/>
            <TextBlock Text="{lang:Loc Experiment_Wash_Vol}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="30"
                   FontWeight="UltraBold"
                   HorizontalAlignment="Right"
                   Foreground="{StaticResource AppTextColor}"
                   Margin="0,6,0,0"/>
            <TextBlock Text="{lang:Loc Experiment_Agitate_Vol}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="30"
                   FontWeight="UltraBold"
                   HorizontalAlignment="Right"
                   Foreground="{StaticResource AppTextColor}"
                   Margin="0,3,0,0"/>
          </StackPanel>
          <StackPanel>
            <StackPanel Orientation="Horizontal"
                    HorizontalAlignment="Center"
                    Width="192"
                    Margin="0,3,0,5">
              <Button Content="25"
                  Command="{Binding SetFixedVolumeButtonClickCommand}"
                  Style="{StaticResource ButtonStyle}"
                  Height="50" Width="60"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="3,0,3,0">
                <Button.CommandParameter>
                  <System:UInt16>25</System:UInt16>
                </Button.CommandParameter>
              </Button>
              <Button Content="50"
                  Command="{Binding SetFixedVolumeButtonClickCommand}"
                  Style="{StaticResource ButtonStyle}"
                  Height="50" Width="60"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="0,0,3,0">
                <Button.CommandParameter>
                  <System:UInt16>50</System:UInt16>
                </Button.CommandParameter>
              </Button>
              <Button Content="100"
                  Command="{Binding SetFixedVolumeButtonClickCommand}"
                  Style="{StaticResource ButtonStyle}"
                  Height="50" Width="60"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center">
                <Button.CommandParameter>
                  <System:UInt16>100</System:UInt16>
                </Button.CommandParameter>
              </Button>
            </StackPanel>
            <Border Background="{StaticResource RibbonBackgroundActive}"
                  HorizontalAlignment="Center">
              <StackPanel>
                <TextBox Width="140"
                         HorizontalAlignment="Center"
                         Margin="8,8,8,0"
                         Style="{StaticResource InputFieldStyle}"
                         Text="{Binding Volumes[0]}">
                  <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand EventName="GotFocus" Command="{Binding FocusedBoxCommand}" CommandParameter="2"/>
                  </dxmvvm:Interaction.Behaviors>
                </TextBox>
                <TextBox Width="140"
                 HorizontalAlignment="Center"
                 Margin="8,8,8,8"
                 Style="{StaticResource InputFieldStyle}"
                 Text="{Binding Volumes[1]}">
                  <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand EventName="GotFocus" Command="{Binding FocusedBoxCommand}" CommandParameter="3"/>
                  </dxmvvm:Interaction.Behaviors>
                </TextBox>
                <TextBox Width="140"
                 HorizontalAlignment="Center"
                 Margin="8,0,8,8"
                 Style="{StaticResource InputFieldStyle}"
                 Text="{Binding Volumes[2]}">
                  <dxmvvm:Interaction.Behaviors>
                    <dxmvvm:EventToCommand EventName="GotFocus" Command="{Binding FocusedBoxCommand}" CommandParameter="4"/>
                  </dxmvvm:Interaction.Behaviors>
                </TextBox>
              </StackPanel>
            </Border>
          </StackPanel>
        </StackPanel>
      </Border>

      <!--Dropdowns-->
      <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="400,300,0,0">
        <StackPanel>
          <TextBlock Text="{lang:Loc Experiment_Speed}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="26"
                   FontWeight="UltraBold"
                   Foreground="{StaticResource AppTextColor}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,0,0,3"/>
          <dx:DropDownButton Width="300"
                           Height="50"
                           FontSize="25"
                           VerticalAlignment="Bottom"
                           HorizontalAlignment="Left"
                           FontFamily="{StaticResource AppTextFont}"
                           Foreground="{StaticResource AppTextColor}"
                           Content="{Binding SelectedSpeedContent}">
            <dxb:PopupMenu ItemLinksSource="{Binding SpeedItems}">
              <dxb:PopupMenu.ItemTemplate>
                <DataTemplate>
                  <ContentControl>
                    <dxb:BarButtonItem Content="{Binding Content}"  
                                   ItemClick="{DXEvent 'Click((int)1)'}"/>
                  </ContentControl>
                </DataTemplate>
              </dxb:PopupMenu.ItemTemplate>
            </dxb:PopupMenu>
          </dx:DropDownButton>
          <TextBlock Text="{lang:Loc Experiment_Classific_Map}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="26"
                   FontWeight="UltraBold"
                   Foreground="{StaticResource AppTextColor}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,0,0,3"/>
          <dx:DropDownButton Width="300"
                           Height="50"
                           FontSize="25"
                           VerticalAlignment="Bottom"
                           HorizontalAlignment="Left"
                           FontFamily="{StaticResource AppTextFont}"
                           Foreground="{StaticResource AppTextColor}"
                           Content="{Binding SelectedClassiMapContent}">
            <dxb:PopupMenu ItemLinksSource="{Binding ClassiMapItems}">
              <dxb:PopupMenu.ItemTemplate>
                <DataTemplate>
                  <ContentControl>
                    <dxb:BarButtonItem Content="{Binding Content}"  
                                   ItemClick="{DXEvent 'Click((int)2)'}"/>
                  </ContentControl>
                </DataTemplate>
              </dxb:PopupMenu.ItemTemplate>
            </dxb:PopupMenu>
          </dx:DropDownButton>
          <TextBlock Text="{lang:Loc Experiment_Ch_Config}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="26"
                   FontWeight="UltraBold"
                   Foreground="{StaticResource AppTextColor}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,0,0,3"/>
          <dx:DropDownButton Width="300"
                           Height="50"
                           FontSize="25"
                           VerticalAlignment="Bottom"
                           HorizontalAlignment="Left"
                           FontFamily="{StaticResource AppTextFont}"
                           Foreground="{StaticResource AppTextColor}"
                           Content="{Binding SelectedChConfigContent}">
            <dxb:PopupMenu ItemLinksSource="{Binding ChConfigItems}">
              <dxb:PopupMenu.ItemTemplate>
                <DataTemplate>
                  <ContentControl>
                    <dxb:BarButtonItem Content="{Binding Content}"  
                                   ItemClick="{DXEvent 'Click((int)3)'}"/>
                  </ContentControl>
                </DataTemplate>
              </dxb:PopupMenu.ItemTemplate>
            </dxb:PopupMenu>
          </dx:DropDownButton>
        </StackPanel>
      </Border>
      
      <!--Fluidics-->
      <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="800,50,0,0">
        <StackPanel>
          <TextBlock Text="{lang:Loc Experiment_Fluidics}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="30"
                   FontWeight="UltraBold"
                   Foreground="{StaticResource AppTextColor}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,0,0,0"/>
          <Button Content="{lang:Loc Experiment_Prime}"
                  Style="{StaticResource ButtonStyle}"
                  Command="{Binding FluidicsButtonClickCommand}"
                  Height="50" Width="100"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="0,4,0,0">
            <Button.CommandParameter>
              <System:Int32>0</System:Int32>
            </Button.CommandParameter>
          </Button>
          <Button Content="{lang:Loc Experiment_Wash_A}"
                  Style="{StaticResource ButtonStyle}"
                  Command="{Binding FluidicsButtonClickCommand}"
                  Height="50" Width="100"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="0,4,0,0">
            <Button.CommandParameter>
              <System:Int32>1</System:Int32>
            </Button.CommandParameter>
          </Button>
          <Button Content="{lang:Loc Experiment_Wash_B}"
                  Style="{StaticResource ButtonStyle}"
                  Command="{Binding FluidicsButtonClickCommand}"
                  Height="50" Width="100"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="0,4,0,0">
            <Button.CommandParameter>
              <System:Int32>2</System:Int32>
            </Button.CommandParameter>
          </Button>
        </StackPanel>
      </Border>
      
      <!--Event Count-->
      <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="950,50,0,0">
        <StackPanel>
          <TextBlock Text="{lang:Loc Experiment_Event_Count}"
                   FontFamily="{StaticResource AppTextFont}"
                   FontSize="30"
                   FontWeight="UltraBold"
                   Foreground="{StaticResource AppTextColor}"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Top"
                   Margin="0,0,0,0"/>
          <TextBox HorizontalAlignment="Stretch"
                   Margin="8,8,8,8"
                   IsReadOnly="True"
                   Style="{StaticResource InputFieldStyle}"
                   Text="{Binding EventCountField[0]}"/>
        </StackPanel>
      </Border>
      
      <!--Load Eject Plate-->
      <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="950,150,0,0">
        <StackPanel>
          <Button Content="{lang:Loc Experiment_Load}"
                  Style="{StaticResource ButtonStyle}"
                  Command="{Binding LoadButtonClickCommand}"
                  Height="50" Width="100"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="0,4,0,0"/>
          <Button Content="{lang:Loc Experiment_Eject}"
                  Style="{StaticResource ButtonStyle}"
                  Command="{Binding EjectButtonClickCommand}"
                  Height="50" Width="100"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="0,4,0,0"/>
        </StackPanel>
      </Border>
      <!--Start & End-->
      <Border HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Margin="1050,350,0,0">
        <StackPanel>
          <Button Content="{lang:Loc Experiment_Start}"
                  Style="{StaticResource ButtonStyle}"
                  Command="{Binding StartButtonClickCommand}"
                  Height="50" Width="100"
                  IsEnabled="{Binding StartButtonEnabled}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="0,4,0,0"/>
          <Button Content="{lang:Loc Experiment_End}"
                  Style="{StaticResource ButtonStyle}"
                  Command="{Binding EndButtonClickCommand}"
                  Height="50" Width="100"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Margin="0,4,0,0"/>
        </StackPanel>
      </Border>
    </Grid>
    <!--Tile Ribbon-->
    <StackPanel Margin="30,60,0,0"
                Width="200">
      <RadioButton Content="{lang:Loc Experiment_Dashboard}"
                   Height="70"
                   IsChecked="True"
                   img:EmbeddedImg.Image="/Icons/motors icon.png"
                   Style="{DynamicResource SubRibbonButtonStyle}"
                   Command="{Binding NavigateMotorsCommand}">
      </RadioButton>
      <RadioButton Content="{lang:Loc Experiment_Load_Template}"
                   Height="70"
                   img:EmbeddedImg.Image="/Icons/components icon.png"
                   Style="{DynamicResource SubRibbonButtonStyle}"
                   Command="{Binding NavigateComponentsCommand}">
      </RadioButton>
      <RadioButton Content="{lang:Loc Experiment_Save_Template}"
                   Height="70"
                   img:EmbeddedImg.Image="/Icons/alignment icon.png"
                   Style="{DynamicResource SubRibbonButtonStyle}"
                   Command="{Binding NavigateAlignmentCommand}">
      </RadioButton>
      <RadioButton Content="{lang:Loc Experiment_Select_Wells}"
                   Height="70"
                   img:EmbeddedImg.Image="/Icons/channel offset icon.png"
                   Style="{DynamicResource SubRibbonButtonStyle}"
                   Command="{Binding NavigateChannelOffsetCommand}">
      </RadioButton>
      <RadioButton Content="{lang:Loc Experiment_Tube}"
                   Height="70"
                   img:EmbeddedImg.Image="/Icons/syringe speeds icon.png"
                   Style="{DynamicResource SubRibbonButtonStyle}"
                   Command="{Binding NavigateSyringeSpeedsCommand}">
      </RadioButton>
    </StackPanel>
  </Grid>
</UserControl>
