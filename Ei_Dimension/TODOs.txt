Ctrl+F every "Path." and "Environment." for irrelevant paths
Need some way to update Device.MapList if we get to add new maps
When something from Settings changes, use .Save() and don't forget to change App.[property]
Save settings from textboxes in App.InjectToTextbox()
ResultsView scatter chart switch legend with buttons so it can be bound to command

ExperimentVM ChangeWellTableSize() has tube as case 1; implement in view
CalibrationVM Classification targets has a weird legacy chart2series stuff. propbably not necessary
ComponentsView SamplingON button - change behaviour like GetPosition Toggle button. for language swapping
AlignmentVM LastCalibratedPosition no implementation in legacy; Auto Align - no Run button implementation, and for some reason turns off LED's

App.InjectToTextbox() needs cleanup after it is finished
If "." is inserted into texbox that is meant to be for INT, round down/ make some alert/<<< or don't accept the ".">>> do that after
  cleaning up the App.InjectToTextbox()

GetProperty still goes to textboxupdater and changes properties
SetProperty goes same way and double time sets UI parameters

BeadRegion class has a new member regionName. every map json has to implement that. do it for DimensionMaps file.
  Update on this: we'll actually use templates to keep regionName data.
  RegionsRenameHandler() is for remake with template.

Fix bug with select all button in WellSelectView

Display a tab related to work order execution where you touch a well
  and all that wells properties (read speed, sample volume, bead map, etc) are displayed,
  During execution, highlight well currently reading and currently aspirating, updating properties as wells are read

The commands that change the dropdown state are legacy from keeping parameters in the firmware, same goes for initStab
  Can safely remove that and use Settings

what does chart2.Series["CLTARGET"].Enabled mean? another chart displayed? ---> CalibrationVM CalibrationSelector()

ExperimentVM EndButtonClick has workorder not imlemented;

PlateReport class has useless members except list

Subtract bed region background button. useless?

Can I make windows dialog windows bigger and bigger fonts?

Switch language should account for selected settings in device. like for ChannelsVM

Everthing regarging activeregions should be a separate class kept in App.

Devexpress dxb:PopupMenu can be used for numpad near textbox

all incoming data is sorted to bins in updater.
  heatmap can be done as "analog" or "discrete"
  analog will require a lot of memory, and some smoothing algorithm <-- O(n^2) that is too much work for no real reason
  !discrete is just bins of each coordinate, easy to calculate, less memory! <---Way to go

so:
get raw data from microcy. bin it. put to respective containers

resultsVM has obscollections of obsobjects. can ez be translated to arrays[obsobjects], so obscollection not neeeded?

results page table should display mean and current stats for the current well being read or

wellresults[i].RP1vals.Count(); - count
wellresults[i].RP1vals.Average(); - mean

BinData() add CL0-CL3 binning, probably to other bins than up to mil. up to 32k

save template name somewhere, also display somewhere. fill it when template loaded.

TimerTick looks like not the best option. should be used only to update UI. program logic should be on a separate thread?


  plateprogress or controls show on the rightside, depending if tube or wells is selected

  experimentVM behaviour should be done in codeBehind

App.ChangeDrawingPlateState() - controls resultsView plate pictogram.
  Not sure how to detect last well, so it doesn't go overboard.

case "ClassificationTargetsContents": (CalibrationView Classification Targets)
  adds a point to XY plot. what is it?
  Save Calibration to current map button is viable?

ready to be read, being read, succesfully read empty;
  green -evetyhing was fine\light red at -at leas one region did not reach target nuber of beads but at least 75% \dark red - else


  Ellipse is a transform of circle -> scale + rotation (or skew?)

Fixed a bug, also present in Legacy: second press of END button results in crash by SetReadingParamsForWell() accesing index+1
  State machine should not be active at all, if measurement is inactive

Fixed a TerminationReadyCheck() possible bug scenario, where assuming EndRegion = 1 could fuck up state machine

Device.TerminationReadyCheck() case 1
  looks wrong. don't copy EndRead button function here? why not?

Template stores System Log checkbox information. probably should not