Ctrl+F every "Path." and "Environment." for irrelevant paths
Need some way to update Device.MapList if we get to add new maps
When something from Settings changes, use .Save() and don't forget to change App.[property]
Save settings from textboxes in App.InjectToTextbox()
ResultsView scatter chart switch legend with buttons so it can be bound to command

ComponentsView SamplingON button - change behaviour like GetPosition Toggle button. for language swapping
AlignmentVM LastCalibratedPosition no implementation in legacy; Auto Align - no Run button implementation, and for some reason turns off LED's

App.InjectToTextbox() needs cleanup after it is finished
If "." is inserted into texbox that is meant to be for INT, round down/ make some alert/<<< or don't accept the ".">>> do that after
  cleaning up the App.InjectToTextbox()

GetProperty still goes to textboxupdater and changes properties
SetProperty goes same way and double time sets UI parameters

Fix bug with select all button in WellSelectView

Display a tab related to work order execution where you touch a well
  and all that wells properties (read speed, sample volume, bead map, etc) are displayed,
  During execution, highlight well currently reading and currently aspirating, updating properties as wells are read

The commands that change the dropdown state are legacy from keeping parameters in the firmware, same goes for initStab
  Can remove that and use Settings

what does chart2.Series["CLTARGET"].Enabled mean? another chart displayed? ---> CalibrationVM CalibrationSelector()

ExperimentVM EndButtonClick has workorder not imlemented;

PlateReport class has useless members except list

Subtract bed region background button. useless?

Can I make windows dialog windows bigger and bigger fonts?

Switch language should account for selected settings in device. like for ChannelsVM

Everthing regarging activeregions should be a separate class kept in App.

Devexpress dxb:PopupMenu can be used for numpad near textbox

resultsVM has obscollections of obsobjects. can ez be translated to arrays[obsobjects], so obscollection not neeeded?

results page table should display mean and current stats for the current well being read or

wellresults[i].RP1vals.Count(); - count
wellresults[i].RP1vals.Average(); - mean

save template name somewhere, also display somewhere. fill it when template loaded.

TimerTick looks like not the best option. should be used only to update UI. program logic should be on a separate thread?

case "ClassificationTargetsContents": (CalibrationView Classification Targets)
  Save Calibration to current map button is viable?

Fixed a bug, also present in Legacy: second press of END button results in crash by SetReadingParamsForWell() accesing index+1
  State machine should not be active at all, if measurement is inactive

Fixed a TerminationReadyCheck() possible bug scenario, where assuming EndRegion = 1 could fuck up state machine

Device.TerminationReadyCheck() case 1
  looks wrong. don't copy EndRead button function here? why not?

Analysis if beads hit a certain region is still done with log(x * num) and not log10() with proper binning. fix it


ResultsVM.FillWorldMaps() has to be called on map selection in Dashboard.(and in dashboard constructor).
  should probably go to a dedicated folder with worldmaps, and import by name.

select the text in a text box when a box is selected
  so that typing replaces the value. it adds now, a second select of the text box should bring up the curosr for editing


DataProcessor.BinMapData() could use some optimisation
ResultsVM.SetDisplayedMap() can be optimised

MicroCyDevice.IsNewWorkOrder() is crazy, since it is checked by app.TimerTick every tick. should be put on file watcher


active regions stats for well click

area select for touch
custom version for load/save template with big fonts
saving graphs, maybe as .png

sampling button on ComponentsView could have an issue

make an Installer
